{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/Contact/ContactForm.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","initialState","email","message","onblur","focused","buttonName","Contact","state","validEmail","test","validMessage","validForm","_this$state","_this","invalidValue","type","_this$state2","invalid","shouldShowError","_this$state3","handleInputChange","event","_event$target","name","setState","handleBlur","handleFocus","handleFormSubmit","preventDefault","_this$state4","_this$props","props","onError","onSuccess","data","formDataNameOrder","JSON","stringify","formGoogleSheetName","xhr","XMLHttpRequest","open","setRequestHeader","onerror","e","console","log","statusText","onload","encoded","map","k","encodeURIComponent","join","send","_this$state5","this","emailError","messageError","emailInputStyle","inputStyle","invalidInput","messageInputStyle","textAreaStyle","react_default","a","createElement","onSubmit","className","style","marginBottom","lineHeight","htmlFor","id","onChange","onBlur","onFocus","aria-required","aria-invalid","required","autoComplete","autofocus","errorMessage","minLength","disabled","Component","color","fontSize","borderColor","backgroundColor","height","width","padding","border","borderRadius"],"mappings":"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","file":"static/js/6.7b22ea5a.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import React, { Component } from 'react';\nimport './ContactForm.css';\n\n// handles contact form, functionality. Pass onSuccess & onError callbacks.\n\nconst initialState = {\n  email: '',\n  message: '',\n  onblur: {\n    email: false,\n    message: false\n  },\n  focused: {\n    email: false,\n    message: false\n  },\n  buttonName: 'Send'\n};\n\nclass Contact extends Component {\n  state = initialState;\n\n  validEmail = email => {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return re.test(email);\n  };\n\n  validMessage = message => {\n    return message.length > 8;\n  };\n\n  validForm = () => {\n    const { email, message } = this.state;\n    if (this.validEmail(email) && this.validMessage(message)) {\n      return true;\n    }\n    return false;\n  };\n\n  invalidValue = type => {\n    const { email, message } = this.state;\n    let invalid = null;\n    switch (type) {\n      case 'email':\n        invalid = !this.validEmail(email);\n        break;\n      case 'message':\n        invalid = !this.validMessage(message);\n        break;\n      default:\n        invalid = true;\n    }\n    return invalid;\n  };\n\n  shouldShowError = type => {\n    const { onblur, focused } = this.state;\n    return (\n      this.state[type] &&\n      this.invalidValue(type) &&\n      onblur[type] &&\n      !focused[type]\n    );\n  };\n\n  handleInputChange = event => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleBlur = event => {\n    this.setState({\n      onblur: { ...this.state.onblur, [event.target.name]: true },\n      focused: { ...this.state.focused, [event.target.name]: false }\n    });\n  };\n\n  handleFocus = event => {\n    this.setState({\n      focused: { ...initialState.focused, [event.target.name]: true },\n      onblur: { ...this.state.onblur, [event.target.name]: false }\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { email, message } = this.state;\n    const { onError, onSuccess } = this.props;\n    const data = {\n      email,\n      message,\n      formDataNameOrder: JSON.stringify(['email', 'message']),\n      formGoogleSheetName: 'responses'\n    };\n    this.setState({ buttonName: 'Sending...' });\n    const url =\n      'https://script.google.com/macros/s/AKfycbymR0qVb1Mfkt9-qtlQsiNgPPE1Dma_dF1_AuTJ0niZVqluoik/exec';\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    // xhr.onreadystatechange = () => {\n    //   this.setState({\n    //     ...initialState,\n    //     sent: true\n    //   });\n    //   this.props.onSuccess();\n    // };\n    xhr.onerror = e => {\n      onError\n        ? onError(e)\n        : console.log('pass onError prop to ContactForm', xhr.statusText);\n    };\n    xhr.onload = e => {\n      onSuccess\n        ? onSuccess(e)\n        : console.log('pass onSuccess prop to ContactForm');\n    };\n    // url encode form data for sending as post data\n    var encoded = Object.keys(data)\n      .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(data[k])}`)\n      .join('&');\n    xhr.send(encoded);\n  };\n\n  render() {\n    const { email, message, buttonName } = this.state;\n    //error states\n    const emailError = this.shouldShowError('email');\n    const messageError = this.shouldShowError('message');\n    const emailInputStyle = emailError\n      ? { ...inputStyle, ...invalidInput }\n      : inputStyle;\n    const messageInputStyle = messageError\n      ? { ...textAreaStyle, ...invalidInput }\n      : textAreaStyle;\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <div className=\"group1\">\n          <div\n            style={{\n              marginBottom: '1em',\n              lineHeight: '1.4em'\n            }}\n          >\n            <label htmlFor=\"email\">Your email: </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.handleBlur}\n              onFocus={this.handleFocus}\n              aria-required=\"true\"\n              aria-invalid={!this.validEmail(email)}\n              style={emailInputStyle}\n              required\n              autoComplete=\"email\"\n              autofocus=\"true\"\n            />\n            {emailError && (\n              <span style={errorMessage}>\n                please enter a valid email address\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"group2\">\n          <div\n            style={{\n              marginBottom: '1em',\n              lineHeight: '1.4em'\n            }}\n          >\n            <label htmlFor=\"message\">Your message: </label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={message}\n              minLength=\"8\"\n              onChange={this.handleInputChange}\n              onBlur={this.handleBlur}\n              onFocus={this.handleFocus}\n              aria-required=\"true\"\n              aria-invalid={message.length < 5}\n              style={messageInputStyle}\n              required\n              autoComplete=\"off\"\n            />\n            {messageError && (\n              <span style={errorMessage}>\n                please write just a little more :)\n              </span>\n            )}\n          </div>\n          <button\n            className=\"contact_button\"\n            disabled={this.validForm() ? false : 'disabled'}\n            type=\"submit\"\n          >\n            {buttonName}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Contact;\n\nconst errorTextColor = '#ec5840';\n\nconst errorMessage = {\n  color: errorTextColor,\n  fontSize: '.8em'\n};\n\nconst invalidInput = {\n  borderColor: '#ec5840',\n  backgroundColor: 'rgba(236, 88, 64, 0.1)'\n};\n\nconst inputStyle = {\n  height: '30px',\n  lineHeight: '30px',\n  width: '100%',\n  color: '#111',\n  fontSize: ' 1.2em',\n  padding: 0,\n  border: '#CCC solid 1px',\n  borderRadius: '2px'\n};\n\nconst textAreaStyle = {\n  ...inputStyle,\n  height: 150\n};\n"],"sourceRoot":""}